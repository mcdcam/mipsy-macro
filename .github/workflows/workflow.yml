# Adapted from https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/

name: Build and Publish to PyPI

on:
  push:
    branches:
      - 'main'
    tags:        
      - 'v*'
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install pypa/build
      run: python3 -m pip install build --user
    - name: Build distributables
      run: python3 -m build
    - name: Store distributables
      uses: actions/upload-artifact@v4
      with:
        name: package-dists
        path: dist/

  test:
    name: Integration testing on Python ${{ matrix.python-version }}
    needs:
    - build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12" ]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Download dists
        uses: actions/download-artifact@v4
        with:
          name: package-dists
          path: dist/
      - name: Install package from dist
        run: pip install ./dist/*.whl
      - name: Basic CLI integration test
        # Just make sure everything is installed correctly and works on an example file
        run: mipsy-macro ./examples/test.S -o ./out.s && diff ./examples/test.preprocessed.S ./out.s

  publish:
    name: Publish to PyPI
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')  # only publish to PyPI on tag pushes
    needs:
    - test
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/mipsy-macro
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
    - name: Download dists
      uses: actions/download-artifact@v4
      with:
        name: package-dists
        path: dist/
    - name: Publish dists to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: Upload dists to GitHub
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')  # only create releases on tag pushes
    needs:
    - test
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases

    steps:
    - name: Download dists
      uses: actions/download-artifact@v4
      with:
        name: package-dists
        path: dist/
    - name: Create GitHub release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release create
        '${{ github.ref_name }}'
        --repo '${{ github.repository }}'
        --notes ""
    - name: Upload dist artifacts to the release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release upload
        '${{ github.ref_name }}' dist/**
        --repo '${{ github.repository }}'
